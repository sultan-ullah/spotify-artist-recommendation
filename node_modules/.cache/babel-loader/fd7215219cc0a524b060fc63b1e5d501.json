{"ast":null,"code":"import _objectSpread from \"/Users/atiqullah/Desktop/projects/spotify-featured-recommend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/atiqullah/Desktop/projects/spotify-featured-recommend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/atiqullah/Desktop/projects/spotify-featured-recommend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/atiqullah/Desktop/projects/spotify-featured-recommend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/atiqullah/Desktop/projects/spotify-featured-recommend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/atiqullah/Desktop/projects/spotify-featured-recommend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/atiqullah/Desktop/projects/spotify-featured-recommend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/atiqullah/Desktop/projects/spotify-featured-recommend/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Login from './Login';\nimport Artist from './Artist';\nimport Search from './Search';\nimport Info from './Info';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {};\n    _this.spotify = new SpotifyWebApi();\n\n    _this.setClientTokens();\n\n    _this.onChangeHandler = _this.onChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClickHandler = _this.onClickHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.backButtonHandler = _this.backButtonHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      selected: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"setClientTokens\",\n    value: function setClientTokens() {\n      var pathArray = window.location.hash.split('&');\n      var clientInfo = {};\n      pathArray.forEach(function (item, index) {\n        var split = item.split('=');\n        clientInfo[split[0].replace('#', '')] = split[1];\n      });\n      this.spotify.setAccessToken(clientInfo.access_token);\n    }\n  }, {\n    key: \"onChangeHandler\",\n    value: function onChangeHandler(event) {\n      var _this2 = this;\n\n      console.log(event.target.value);\n      var query = event.target.value;\n\n      if (query === '') {\n        this.setState(_objectSpread({}, this.state, {\n          artistList: []\n        }));\n        return;\n      }\n\n      this.spotify.searchArtists(query, {\n        limit: 20\n      }, function (error, data) {\n        var artists = data.artists.items.map(function (item) {\n          return React.createElement(Artist, {\n            key: item.id,\n            name: item.name,\n            image: item.images[2] ? item.images[2].url : 'https://via.placeholder.com/70',\n            onClickHandler: function onClickHandler() {\n              return _this2.onClickHandler(item.id, item.name, event);\n            },\n            link: item.uri,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          });\n        }); //   this.setState({...this.state, artistList: artists});\n      });\n    }\n  }, {\n    key: \"backButtonHandler\",\n    value: function backButtonHandler(event) {\n      this.setState(_objectSpread({}, this.state, {\n        selected: false,\n        artistList: ''\n      }));\n    }\n  }, {\n    key: \"onClickHandler\",\n    value: function onClickHandler(id, name, event) {\n      var _this3 = this;\n\n      console.log(name);\n      this.setState(_objectSpread({}, this.state, {\n        selected: true,\n        name: name,\n        artistList: ''\n      }));\n      this.spotify.getArtistRelatedArtists(id, function (error, data) {\n        if (error) console.log(error);else {\n          var relatedArtists = data.artists.map(function (item) {\n            return React.createElement(Artist, {\n              key: item.id,\n              name: item.name,\n              image: item.images[2] ? item.images[2].url : 'https://via.placeholder.com/70',\n              onClickHandler: function onClickHandler() {\n                return _this3.onClickHandler(item.id, item.name, event);\n              },\n              link: item.uri,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78\n              },\n              __self: this\n            });\n          });\n\n          _this3.setState(_objectSpread({}, _this3.state, {\n            artistList: relatedArtists\n          }));\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Login, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, !this.state.selected ? React.createElement(Search, {\n        onChangeHandler: this.onChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }) : React.createElement(Info, {\n        name: this.state.name,\n        buttonHandler: this.backButtonHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), this.state.artistList);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/atiqullah/Desktop/projects/spotify-featured-recommend/src/App.js"],"names":["React","Component","SpotifyWebApi","Login","Artist","Search","Info","App","state","spotify","setClientTokens","onChangeHandler","bind","onClickHandler","backButtonHandler","selected","pathArray","window","location","hash","split","clientInfo","forEach","item","index","replace","setAccessToken","access_token","event","console","log","target","value","query","setState","artistList","searchArtists","limit","error","data","artists","items","map","id","name","images","url","uri","getArtistRelatedArtists","relatedArtists"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Login from './Login';\nimport Artist from './Artist';\nimport Search from './Search';\nimport Info from './Info';\n\n\nclass App extends Component {\n  state = {};\n  spotify = new SpotifyWebApi();\n  \n  constructor() {\n    super();\n    this.setClientTokens()\n    this.onChangeHandler = this.onChangeHandler.bind(this)\n    this.onClickHandler = this.onClickHandler.bind(this)\n    this.backButtonHandler = this.backButtonHandler.bind(this)\n    this.state = {selected: false}    \n  }\n\n  setClientTokens() {\n    let pathArray = window.location.hash.split('&');\n    let clientInfo  = {};\n    pathArray.forEach((item, index) => {\n      let split = item.split('=');\n      clientInfo[split[0].replace('#', '')] = split[1];\n    });\n      this.spotify.setAccessToken(clientInfo.access_token);\n  }\n\n  onChangeHandler(event) {\n    console.log(event.target.value);\n    let query = event.target.value;\n    if (query === '') {\n      this.setState({...this.state, artistList: []});\n      return;\n    }\n\n    this.spotify.searchArtists(query, {limit: 20}, (error, data) => {\n      let artists = data.artists.items.map((item) => {\n        return <Artist \n          key={item.id}\n          name={item.name}\n          image={(item.images[2]) ? item.images[2].url: 'https://via.placeholder.com/70'}\n          onClickHandler={() => this.onClickHandler(item.id, item.name, event)}\n          link={item.uri}\n        />\n      });\n    //   this.setState({...this.state, artistList: artists});\n    });\n     \n  }\n\n  backButtonHandler(event) {\n    this.setState({\n      ...this.state,\n      selected: false,\n      artistList: ''\n    });\n  }\n\n\n  onClickHandler(id, name, event) {\n    console.log(name);\n    this.setState({\n      ...this.state,\n      selected: true,\n      name: name,\n      artistList: ''\n    });\n\n    this.spotify.getArtistRelatedArtists(id, (error, data) => {\n      if (error) console.log(error);\n      else {\n        let relatedArtists = data.artists.map((item) => {\n          return <Artist \n            key={item.id}\n            name={item.name}\n            image={(item.images[2]) ? item.images[2].url: 'https://via.placeholder.com/70'}\n            onClickHandler={() => this.onClickHandler(item.id, item.name, event)}\n            link={item.uri}\n          />\n        });\n        this.setState({\n          ...this.state,\n          artistList: relatedArtists\n        });\n      }\n    });\n  }\n\n\n  render() {\n    return (\n      <Login>\n        {!this.state.selected ? \n          <Search onChangeHandler={this.onChangeHandler}/>: \n          <Info name={this.state.name} buttonHandler={this.backButtonHandler}/>\n        }\n        {this.state.artistList}\n      </Login>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}