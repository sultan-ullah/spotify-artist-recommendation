{"ast":null,"code":"import _objectSpread from \"/Users/atiqullah/Desktop/projects/spotify-featured-recommend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/atiqullah/Desktop/projects/spotify-featured-recommend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/atiqullah/Desktop/projects/spotify-featured-recommend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/atiqullah/Desktop/projects/spotify-featured-recommend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/atiqullah/Desktop/projects/spotify-featured-recommend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/atiqullah/Desktop/projects/spotify-featured-recommend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/atiqullah/Desktop/projects/spotify-featured-recommend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/atiqullah/Desktop/projects/spotify-featured-recommend/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Login from './Login';\nimport Artist from './Artist';\nimport Search from './Search';\nimport Info from './Info';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {};\n    _this.spotify = new SpotifyWebApi();\n\n    _this.setClientTokens();\n\n    _this.onChangeHandler = _this.onChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClickHandler = _this.onClickHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.backButtonHandler = _this.backButtonHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      artistList: '',\n      selected: false\n    };\n    return _this;\n  } // shouldComponentUpdate() {\n  //   return false;\n  // }\n\n\n  _createClass(App, [{\n    key: \"setClientTokens\",\n    value: function setClientTokens() {\n      var pathArray = window.location.hash.split('&');\n      var clientInfo = {};\n      pathArray.forEach(function (item, index) {\n        var split = item.split('=');\n        clientInfo[split[0].replace('#', '')] = split[1];\n      });\n      this.spotify.setAccessToken(clientInfo.access_token);\n    }\n  }, {\n    key: \"onChangeHandler\",\n    value: function onChangeHandler(event) {\n      var _this2 = this;\n\n      if (event.target.value === '') {\n        this.setState(_objectSpread({}, this.state, {\n          artistList: []\n        }));\n      }\n\n      this.spotify.searchArtists(event.target.value, {\n        limit: 20\n      }, function (error, data) {\n        if (error) console.log(error);else {\n          var artists = data.artists.items.map(function (item) {\n            return React.createElement(Artist, {\n              key: item.id,\n              name: item.name,\n              image: item.images[2] ? item.images[2].url : 'https://via.placeholder.com/70',\n              onClickHandler: function onClickHandler() {\n                return _this2.onClickHandler(item.id, item.name, event);\n              },\n              link: item.uri,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54\n              },\n              __self: this\n            });\n          });\n          console.log(artists);\n\n          _this2.setState(_objectSpread({}, _this2.state, {\n            artistList: artists\n          }));\n        }\n      });\n    }\n  }, {\n    key: \"backButtonHandler\",\n    value: function backButtonHandler(event) {\n      this.setState(_objectSpread({}, this.state, {\n        selected: false,\n        artistList: ''\n      }));\n    }\n  }, {\n    key: \"onClickHandler\",\n    value: function onClickHandler(id, name, event) {\n      var _this3 = this;\n\n      console.log(name);\n      this.setState(_objectSpread({}, this.state, {\n        selected: true,\n        name: name,\n        artistList: ''\n      }));\n      this.spotify.getArtistRelatedArtists(id, function (error, data) {\n        if (error) console.log(error);else {\n          var relatedArtists = data.artists.map(function (item) {\n            return React.createElement(Artist, {\n              key: item.id,\n              name: item.name,\n              image: item.images[2] ? item.images[2].url : 'https://via.placeholder.com/70',\n              onClickHandler: function onClickHandler() {\n                return _this3.onClickHandler(item.id, item.name, event);\n              },\n              link: item.uri,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97\n              },\n              __self: this\n            });\n          });\n\n          _this3.setState(_objectSpread({}, _this3.state, {\n            artistList: relatedArtists\n          }));\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Login, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, !this.state.selected ? React.createElement(Search, {\n        onChangeHandler: this.onChangeHandler,\n        ref: this.textInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }) : React.createElement(Info, {\n        name: this.state.name,\n        buttonHandler: this.backButtonHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), this.state.artistList));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/atiqullah/Desktop/projects/spotify-featured-recommend/src/App.js"],"names":["React","Component","SpotifyWebApi","Login","Artist","Search","Info","App","state","spotify","setClientTokens","onChangeHandler","bind","onClickHandler","backButtonHandler","artistList","selected","pathArray","window","location","hash","split","clientInfo","forEach","item","index","replace","setAccessToken","access_token","event","target","value","setState","searchArtists","limit","error","data","console","log","artists","items","map","id","name","images","url","uri","getArtistRelatedArtists","relatedArtists","textInput"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Login from './Login';\nimport Artist from './Artist';\nimport Search from './Search';\nimport Info from './Info';\n\n\nclass App extends Component {\n  state = {};\n  spotify = new SpotifyWebApi();\n  \n  constructor() {\n    super();\n    this.setClientTokens()\n    this.onChangeHandler = this.onChangeHandler.bind(this)\n    this.onClickHandler = this.onClickHandler.bind(this)\n    this.backButtonHandler = this.backButtonHandler.bind(this)\n    this.state = {artistList: '', selected: false}    \n  }\n\n\n  // shouldComponentUpdate() {\n  //   return false;\n  // }\n\n  setClientTokens() {\n    let pathArray = window.location.hash.split('&');\n    let clientInfo  = {};\n    pathArray.forEach((item, index) => {\n      let split = item.split('=');\n      clientInfo[split[0].replace('#', '')] = split[1];\n    });\n      this.spotify.setAccessToken(clientInfo.access_token);\n  }\n\n  onChangeHandler(event) {\n    if (event.target.value === '') {\n      this.setState({\n        ...this.state,\n        artistList: []\n      })\n    }\n\n\n\n\n    this.spotify.searchArtists(event.target.value, {limit: 20}, (error, data) => {\n      if (error) console.log(error)\n      else {\n        var artists = data.artists.items.map((item) => {\n          return(\n            <Artist\n              key={item.id}\n              name={item.name}\n              image={(item.images[2]) ? item.images[2].url: 'https://via.placeholder.com/70'}\n              onClickHandler={() => this.onClickHandler(item.id, item.name, event)}\n              link={item.uri}\n            >\n            </Artist>);\n        });\n        console.log(artists);\n        this.setState({\n          ...this.state,\n          artistList: artists\n        });\n        \n      }\n    });\n    \n        \n  }\n\n  backButtonHandler(event) {\n    this.setState({\n      ...this.state,\n      selected: false,\n      artistList: ''\n    });\n  }\n\n\n  onClickHandler(id, name, event) {\n    console.log(name);\n    this.setState({\n      ...this.state,\n      selected: true,\n      name: name,\n      artistList: ''\n    });\n\n    this.spotify.getArtistRelatedArtists(id, (error, data) => {\n      if (error) console.log(error);\n      else {\n        let relatedArtists = data.artists.map((item) => {\n          return <Artist \n            key={item.id}\n            name={item.name}\n            image={(item.images[2]) ? item.images[2].url: 'https://via.placeholder.com/70'}\n            onClickHandler={() => this.onClickHandler(item.id, item.name, event)}\n            link={item.uri}\n          />\n        });\n        this.setState({\n          ...this.state,\n          artistList: relatedArtists\n        });\n      }\n    });\n  }\n\n\n  render() {\n    return (\n      <>\n      <Login>\n        {!this.state.selected ? \n          <Search onChangeHandler={this.onChangeHandler} ref={this.textInput}/>: \n          <Info name={this.state.name} buttonHandler={this.backButtonHandler}/>\n        }\n        {this.state.artistList}\n      </Login>\n        \n     \n       \n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}